{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClCA;AACA;AACA;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://youtube-sort-by-likes/./src/js/api.js","webpack://youtube-sort-by-likes/./src/js/constants.js","webpack://youtube-sort-by-likes/./src/js/utils.js","webpack://youtube-sort-by-likes/webpack/bootstrap","webpack://youtube-sort-by-likes/webpack/runtime/define property getters","webpack://youtube-sort-by-likes/webpack/runtime/hasOwnProperty shorthand","webpack://youtube-sort-by-likes/webpack/runtime/make namespace object","webpack://youtube-sort-by-likes/./src/js/popup.js"],"sourcesContent":["import { API_KEY } from './constants.js';\r\n\r\nfunction getVideos(channelId) {\r\n  return fetch(\r\n    `https://www.googleapis.com/youtube/v3/search?key=${API_KEY}&channelId=${channelId}&part=snippet,id&order=viewCount&maxResults=10`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.items.filter((item) => item.id.kind === \"youtube#video\")\r\n  });\r\n}\r\n\r\nfunction getVideoStats(videoId) {\r\n  return fetch(\r\n    `https://www.googleapis.com/youtube/v3/videos?key=${API_KEY}&id=${videoId}&part=statistics`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => data.items[0].statistics);\r\n}\r\n\r\nfunction getChannelIdByUsername(username) {\r\n  return fetch(\r\n    `https://www.googleapis.com/youtube/v3/channels?key=${API_KEY}&forUsername=${username}&part=id`\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.items.length > 0) {\r\n        return data.items[0].id;\r\n      } else {\r\n        throw new Error('No channel found with this username');\r\n      }\r\n    });\r\n}\r\n\r\nexport { getVideos, getVideoStats, getChannelIdByUsername };\r\n","// replace with your own YouTube API key\r\nconst API_KEY = \"AIzaSyCH3y1_3XlxueC-ecNYfTcHOlTxtOiwL1o\";\r\nexport { API_KEY };\r\n","import { getChannelIdByUsername } from './api.js';\r\n\r\nfunction getChannelId(url) {\r\n  if (url.hostname === 'www.youtube.com' && url.pathname.startsWith('/channel/')) {\r\n    return Promise.resolve(url.pathname.split('/channel/')[1]);\r\n  } else if (url.hostname === 'www.youtube.com' && url.pathname.startsWith('/@')) {\r\n    let username = url.pathname.split('/@')[1].split('/videos')[0];\r\n    return getChannelIdByUsername(username);\r\n  } else {\r\n    throw new Error('URL is not a YouTube channel URL');\r\n  }\r\n}\r\n\r\nexport { getChannelId };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getVideos, getVideoStats } from './api.js';\r\nimport { getChannelId } from './utils.js';\r\n\r\n// Updates the popup with the most liked video and video with the highest like/view ratio\r\nasync function updatePopup(videos) {\r\n  let mostLikedVideos = Array(3).fill({likes: 0, title: \"\"});\r\n  let highestRatioVideos = Array(3).fill({ratio: 0, title: \"\"});\r\n\r\n  console.log(videos);\r\n\r\n  for (let video of videos) {\r\n    let stats = await getVideoStats(video.id.videoId);\r\n    let views = parseInt(stats.viewCount);\r\n    let likes = parseInt(stats.likeCount);\r\n\r\n    let ratio = likes / views;\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      if (likes > mostLikedVideos[i].likes) {\r\n        mostLikedVideos.splice(i, 0, {likes, title: video.snippet.title});\r\n        mostLikedVideos.pop();\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      if (ratio > highestRatioVideos[i].ratio) {\r\n        highestRatioVideos.splice(i, 0, {ratio, title: video.snippet.title});\r\n        highestRatioVideos.pop();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  document.getElementById(\"mostLikedVideo1\").textContent = mostLikedVideos[0].title;\r\n  document.getElementById(\"mostLikedVideo2\").textContent = mostLikedVideos[1].title;\r\n  document.getElementById(\"mostLikedVideo3\").textContent = mostLikedVideos[2].title;\r\n\r\n  document.getElementById(\"highestRatioVideo1\").textContent = highestRatioVideos[0].title;\r\n  document.getElementById(\"highestRatioVideo2\").textContent = highestRatioVideos[1].title;\r\n  document.getElementById(\"highestRatioVideo3\").textContent = highestRatioVideos[2].title;\r\n}\r\n\r\nconsole.log(\"yolo dawg\");\r\n\r\nchrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n  var url = new URL(tabs[0].url);\r\n  getChannelId(url)\r\n    .then(channelId => getVideos(channelId))\r\n    .then(updatePopup)\r\n    .catch(console.error);\r\n});\r\n"],"names":[],"sourceRoot":""}